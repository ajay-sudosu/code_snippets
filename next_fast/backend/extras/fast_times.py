import pgeocode

a = ['10001',
'10116',
'10121',
'10119',
'10018',
'10123',
'10118',
'10122',
'10120',
'10199',
'10060',
'10011',
'10242',
'10113',
'10036',
'10168',
'10249',
'10110',
'10175',
'10176',
'10173',
'10178',
'10165',
'10174',
'10016',
'10101',
'10112',
'10020',
'10170',
'10169',
'10010',
'10177',
'10166',
'10102',
'10109',
'10114',
'10111',
'10167',
'10019',
'10081',
'10087',
'10172',
'10103',
'10104',
'10017',
'10171',
'10055',
'10107',
'10106',
'10154',
'10105',
'10276',
'10014',
'10152',
'10003',
'10151',
'10150',
'10153',
'10022',
'10155',
'07086',
'10012',
'10069',
'10023',
'07030',
'10009',
'10065',
'10002',
'11109',
'07087',
'10013',
'10021',
'10158',
'10278',
'10044',
'11120',
'07093',
'10282',
'07310',
'10108',
'10117',
'10124',
'10125',
'10126',
'10129',
'10130',
'10131',
'10132',
'10133',
'10138',
'10156',
'10157',
'10159',
'10160',
'10163',
'10164',
'10179',
'10185',
'10203',
'10211',
'10212',
'10213',
'10256',
'10258',
'10259',
'10260',
'10261',
'10265',
'10268',
'10269',
'10272',
'10273',
'10274',
'10275',
'10285',
'10286',
'10007',
'10075',
'10279',
'10162',
'10080',
'10008',
'10090',
'10028',
'10277',
'10038',
'10045',
'10271',
'07307',
'07047',
'10280',
'10006',
'11222',
'10005',
'11101',
'10270',
'07302',
'10128',
'10043',
'10281',
'10024',
'10041',
'11106',
'11251',
'10025',
'11211',
'11242',
'07311',
'11202',
'11243',
'11256',
'11201',
'11102',
'07306',
'10029',
'11249',
'11241',
'07094',
'11104',
'10004',
'11205',
'07304',
'07308',
'10026',
'07096',
'11206',
'11245',
'11103',
'10115',
'07097',
'07303',
'07399',
'07395',
'10035',
'07022',
'11377',
'07010',
'10027',
'11217',
'11105',
'11378',
'11247',
'07020',
'11231',
'11237',
'10037',
'11221',
'11238',
'11216',
'10030',
'07657',
'11370',
'10454',
'07305',
'10031',
'11372',
'11215',
'10039',
'10451',
'11373',
'11213',
'10032',
'10455',
'11379',
'07032',
'11232',
'11225',
'11233',
'07072',
'07650',
'11369',
'07071',
'11371',
'07073',
'07024',
'10474',
'07643',
'07074',
'11385',
'10452',
'10456',
'07660',
'11374',
'11212',
'07031',
'11218',
'11368',
'10459',
'11226',
'11207',
'11220',
'11203',
'07605',
'07070',
'07099',
'07608',
'07002',
'10033',
'07699',
'07105',
'07029',
'11219',
'10040',
'11375',
'10453',
'11421',
'07606',
'10473',
'10457',
'11208',
'11356',
'07075',
'10472',
'07604',
'07603',
'10460',
'11351',
'11416',
'11354',
'11367',
'11204',
'11230',
'07104',
'11210',
'10034',
'11352',
'11355',
'11209',
'07109',
'07057',
'11415',
'11236',
'11424',
'11228',
'07101',
'07184',
'07188',
'07189',
'07191',
'07192',
'07193',
'07195',
'07198',
'07199',
'07102',
'11418',
'07175',
'11380',
'11417',
'11381',
'11386',
'07014',
'07632',
'07666',
'11239',
'10468',
'07114',
'07602',
'07631',
'07601',
'10462',
'07110',
'10458',
'07644',
'10463',
'11357',
'07055',
'11419',
'11414',
'07107',
'11252',
'10461',
'11435',
'07103',
'11358',
'11214',
'11365',
'07026',
'11420',
'11234',
'11229',
'11223',
'11431',
'11405',
'11425',
'11439',
'11451',
'11499',
'07003',
'10467',
'11366',
'07108',
'11432',
'07012',
'07201',
'10465',
'07607',
'07019',
'07017',
'10471',
'10469',
'07015',
'11360',
'07112',
'07662',
'11433',
'07028',
'07018',
'11436',
'07670',
'07011',
'11359',
'11361',
'11235',
'07663',
'07621',
'11224',
'07206',
'11423',
'07106',
'07042',
'10475',
'07661',
'07013',
'07407',
'07111',
'07051',
'11364',
'10466',
'07043',
'10470',
'07646',
'11434',
'10705',
'07050',
'07207',
'11412',
'07205',
'11427',
'07503',
'07208',
'10464',
'11430',
'11363',
'07626',
'11693',
'07513',
'11428',
'07202',
'10702',
'07628',
'07504',
'11022',
'10550',
'11362',
'11429',
'11437',
'07079',
'10704',
'10551',
'07652',
'07044',
'07653',
'11411',
'11695',
'11426',
'11023',
'07009',
'11024',
'11413',
'07627',
'07052',
'11697',
'07040',
'10553',
'07649',
'11694',
'07410',
'11021',
'07501',
'11027',
'07514',
'10803',
'11026',
'07641',
'07509',
'07510',
'07511',
'07533',
'07543',
'07544',
'07083',
'07424',
'07505',
'11005',
'11004',
'11422',
'11020',
'10552',
'07620',
'11692',
'10805',
'07524',
'10701',
'11001',
'11002',
'07624',
'07522',
'07204',
'07088',
'07203',
'11042',
'07502',
'07630',
'11096',
'10703',
'10708',
'11003',
'07021',
'10802',
'07512',
'07036',
'07007',
'10801',
'07452',
'11691',
'11690',
'07507',
'07041',
'11580',
'11582',
'07538',
'07033',
'11581',
'11051',
'11052',
'11053',
'11054',
'11055',
'11030',
'11516',
'11040',
'07640',
'07506',
'07006',
'07676',
'10710',
'11050',
'07068',
'07648',
'07451',
'07450',
'07008',
'11598',
'10707',
'11559',
'11010',
'10709',
'07016',
'10804',
'11557',
'07078',
'07508',
'07039',
'11565',
'07081',
'10706',
'07065',
'10538',
'07642',
'07675',
'11509',
'07647',
'07004',
'07423',
'11563',
'11507',
'07064',
'11531',
'07001',
'11576',
'10964',
'11596',
'07027',
'07432',
'11552',
'11501',
'07470',
'11577',
'11518',
'11530',
'07474',
'07066',
'10983',
'10976',
'07077',
'10522',
'07902',
'07481',
'07999',
'07901',
'07463',
'11547',
'10543',
'07091',
'07677',
'07090',
'11579',
'11570',
'10583',
'07092',
'07058',
'10502',
'11571',
'11548',
'07656',
'11550',
'11551',
'07067',
'10503',
'07936',
'11514',
'11599',
'07035',
'11572',
'11558',
'10968',
'07095',
'07440',
'07401',
'10530',
'07076',
'11549',
'08830',
'10962',
'07458',
'07645',
'07417',
'07932',
'10533',
'11542',
'11568',
'10528',
'11553',
'11555',
'11556',
'11510',
'07928',
'10965',
'08861',
'07974',
'11561',
'10606',
'11590',
'07023',
'11545',
'07034',
'11575',
'07082',
'08862',
'10607',
'10913',
'10605',
'08863',
'07444',
'07940',
'07732',
'10580',
'07734',
'07045',
'07054',
'11520',
'07446',
'07922',
'07758',
'07062',
'07981',
'10601',
'08820',
'11560',
'07436',
'10602',
'07061',
'11554',
'10610',
'07442',
'11569',
'07718',
'10523',
'07961',
'08840',
'08832',
'10960',
'07457',
'07737',
'10954',
'07935',
'11753',
'07735',
'11566',
'11853',
'10994',
'10603',
'10591',
'07752',
'07060',
'07716',
'07730',
'08879',
'07430',
'11732',
'08837',
'07069',
'07927',
'11710',
'10577',
'11802',
'11815',
'11765',
'11801',
'07420',
'10604']


import json
import requests
def fact(n): 
  
    res = 1
      
    for i in range(2, n+1): 
        res = res * i 
          
    return res

def nCr(n, r): 
    return (fact(n) / (fact(r) * fact(n - r))) 

dist = pgeocode.GeoDistance('US')
final = {}

total = nCr(len(a), 2)

api_key ='AIzaSyAe7nmOwtSLsOdfYwJ_ns3p1krP0h97rPE'
def get_travel_time(source, dest):
  try:
    
    url ='https://maps.googleapis.com/maps/api/distancematrix/json?'
    request_str = (url + 'origins=' + source +
                   '&destinations=' + dest +
                   '&key=' + api_key)
  
    r = requests.get(request_str)
    x = r.json()
  
    t = x["rows"][0]["elements"][0]["duration"]["value"]
    final = int(t/60)
    
    return final
  except:
    return 10

count = 0;
for i in range(0, len(a) - 1):
	for j in range(i + 1, len(a)):
		count += 1;
		temp_travel_time =  get_travel_time(a[i], a[j])
		if a[i] in final:
			final[a[i]][a[j]] = temp_travel_time
		else:
			final[a[i]] = {}
			final[a[i]][a[j]] = temp_travel_time
		if a[j] in final:
			final[a[j]][a[i]] = temp_travel_time
		else:
			final[a[j]] = {}
			final[a[j]][a[i]] = temp_travel_time

	print(f'{count * 100/total}%')

print(final)
with open('driving_times.json', 'w') as outfile:
    json.dump(final, outfile)
